############################################
# AUTOGENERATED BY spycilab - DO NOT EDIT! #
############################################

workflow:
  rules:
  - if: (($CI_PIPELINE_SOURCE == 'push') && ($CI_OPEN_MERGE_REQUESTS))
    when: never
  - when: always
stages:
- Testing
.job_base:
  script: ${JOB_RUN_PREFIX} ./pipeline.py run ${INTERNAL_JOB_NAME} -v CI_DEFAULT_BRANCH="${CI_DEFAULT_BRANCH}"
    -v CI_PIPELINE_SOURCE="${CI_PIPELINE_SOURCE}" -v CI_PIPELINE_TRIGGERED="${CI_PIPELINE_TRIGGERED}"
    -v CI_PIPELINE_URL="${CI_PIPELINE_URL}" -v CI_REGISTRY="${CI_REGISTRY}" -v CI_REGISTRY_IMAGE="${CI_REGISTRY_IMAGE}"
    -v CI_REGISTRY_PASSWORD="${CI_REGISTRY_PASSWORD}" -v CI_REGISTRY_USER="${CI_REGISTRY_USER}"
    -v CI_REPOSITORY_URL="${CI_REPOSITORY_URL}" -v CI_MERGE_REQUEST_ID="${CI_MERGE_REQUEST_ID}"
    -v CI_OPEN_MERGE_REQUESTS="${CI_OPEN_MERGE_REQUESTS}" -v CI_COMMIT_AUTHOR="${CI_COMMIT_AUTHOR}"
    -v CI_COMMIT_BRANCH="${CI_COMMIT_BRANCH}" -v CI_COMMIT_DESCRIPTION="${CI_COMMIT_DESCRIPTION}"
    -v CI_COMMIT_MESSAGE="${CI_COMMIT_MESSAGE}" -v CI_COMMIT_REF_NAME="${CI_COMMIT_REF_NAME}"
    -v CI_COMMIT_SHA="${CI_COMMIT_SHA}" -v CI_COMMIT_TAG="${CI_COMMIT_TAG}" -v CI_JOB_NAME="${CI_JOB_NAME}"
    -v CI_JOB_TOKEN="${CI_JOB_TOKEN}"
Unit Tests:
  stage: Testing
  extends: .job_base
  variables:
    INTERNAL_JOB_NAME: unit_tests
  artifacts:
    reports:
      junit: pyunit.xml
    when: always
"\u200BZ":
  stage: Testing
  extends: .job_base
  variables:
    INTERNAL_JOB_NAME: z
"\u200B\u200BY":
  stage: Testing
  extends: .job_base
  variables:
    INTERNAL_JOB_NAME: y
a:
  stage: Testing
  extends: .job_base
  variables:
    INTERNAL_JOB_NAME: a
aa:
  stage: Testing
  extends: .job_base
  variables:
    INTERNAL_JOB_NAME: aa
